Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DECLARE
    DO
    LBRACKET
    NUMBER
    RBRACKET
    STRING
    SYMBOLS
    TERMINALS

Grammar

Rule 0     S' -> program
Rule 1     empty -> <empty>
Rule 2     program -> class_decl
Rule 3     program -> class_decl program
Rule 4     class_decl -> CLASS ID EXTENDS ID LBRACE class_body_decl RBRACE
Rule 5     class_decl -> CLASS ID LBRACE class_body_decl RBRACE
Rule 6     class_body_decl -> class_body_sub_decls
Rule 7     class_body_sub_decls -> field_decl SEMICOLON class_body_sub_decls
Rule 8     class_body_sub_decls -> method_decl class_body_sub_decls
Rule 9     class_body_sub_decls -> constructor_decl class_body_sub_decls
Rule 10    class_body_sub_decls -> field_decl SEMICOLON
Rule 11    class_body_sub_decls -> constructor_decl
Rule 12    class_body_sub_decls -> method_decl
Rule 13    class_body_sub_decls -> empty
Rule 14    field_decl -> modifier var_decl
Rule 15    modifier -> visibility applicability
Rule 16    modifier -> visibility
Rule 17    modifier -> applicability
Rule 18    modifier -> empty
Rule 19    visibility -> PUBLIC
Rule 20    visibility -> PRIVATE
Rule 21    applicability -> STATIC
Rule 22    var_decl -> type variables
Rule 23    type -> INT
Rule 24    type -> FLOAT
Rule 25    type -> BOOLEAN
Rule 26    type -> VOID
Rule 27    type -> ID
Rule 28    variables -> variable
Rule 29    variables -> variables COMMA variable
Rule 30    variables -> empty
Rule 31    variable -> ID
Rule 32    method_decl -> modifier type ID LPAREN RPAREN block
Rule 33    method_decl -> modifier VOID ID LPAREN RPAREN block
Rule 34    method_decl -> modifier type ID LPAREN formals RPAREN block
Rule 35    method_decl -> modifier VOID ID LPAREN formals RPAREN block
Rule 36    constructor_decl -> modifier ID LPAREN RPAREN block
Rule 37    constructor_decl -> modifier ID LPAREN formals RPAREN block
Rule 38    formals -> formals COMMA formal_param
Rule 39    formals -> formal_param
Rule 40    formals -> empty
Rule 41    formal_param -> type variable
Rule 42    block -> LBRACE block_end RBRACE
Rule 43    block_end -> stmt
Rule 44    block_end -> stmt block_end
Rule 45    block_end -> empty
Rule 46    stmt -> IF LPAREN expr RPAREN stmt
Rule 47    stmt -> IF LPAREN expr RPAREN stmt ELSE stmt
Rule 48    stmt -> WHILE LPAREN expr RPAREN stmt
Rule 49    stmt -> FOR LPAREN stmt_expr SEMICOLON expr SEMICOLON stmt_expr RPAREN stmt
Rule 50    stmt -> RETURN SEMICOLON
Rule 51    stmt -> RETURN expr SEMICOLON
Rule 52    stmt -> stmt_expr SEMICOLON
Rule 53    stmt -> BREAK SEMICOLON
Rule 54    stmt -> CONTINUE SEMICOLON
Rule 55    stmt -> block
Rule 56    stmt -> var_decl SEMICOLON
Rule 57    stmt -> SEMICOLON
Rule 58    literal -> INTCONST
Rule 59    literal -> FLOATCONST
Rule 60    literal -> STRINGCONST
Rule 61    literal -> NULL
Rule 62    literal -> TRUE
Rule 63    literal -> FALSE
Rule 64    primary -> literal
Rule 65    primary -> THIS
Rule 66    primary -> SUPER
Rule 67    primary -> LPAREN expr RPAREN
Rule 68    primary -> NEW ID LPAREN arguments RPAREN
Rule 69    primary -> NEW ID LPAREN RPAREN
Rule 70    primary -> lhs
Rule 71    primary -> method_invocation
Rule 72    arguments -> expr
Rule 73    arguments -> arguments COMMA expr
Rule 74    arguments -> empty
Rule 75    lhs -> field_access
Rule 76    field_access -> primary PERIOD ID
Rule 77    field_access -> ID
Rule 78    method_invocation -> field_access LPAREN RPAREN
Rule 79    method_invocation -> field_access LPAREN arguments RPAREN
Rule 80    expr -> primary
Rule 81    expr -> assign
Rule 82    expr -> expr arith_op expr
Rule 83    expr -> expr bool_op expr
Rule 84    expr -> unary_op expr
Rule 85    assign -> lhs EQUALS expr
Rule 86    assign -> lhs PLUSPLUS
Rule 87    assign -> PLUSPLUS lhs
Rule 88    assign -> lhs MINUSMINUS
Rule 89    assign -> MINUSMINUS lhs
Rule 90    arith_op -> PLUS
Rule 91    arith_op -> MINUS
Rule 92    arith_op -> TIMES
Rule 93    arith_op -> DIVIDE
Rule 94    bool_op -> AND
Rule 95    bool_op -> OR
Rule 96    bool_op -> EQUALSCOMPARE
Rule 97    bool_op -> NOTEQUALS
Rule 98    bool_op -> LESSTHAN
Rule 99    bool_op -> GREATERTHAN
Rule 100   bool_op -> LESSTHANOREQ
Rule 101   bool_op -> GREATERTHANOREQ
Rule 102   unary_op -> PLUS
Rule 103   unary_op -> MINUS
Rule 104   unary_op -> NOT
Rule 105   stmt_expr -> assign
Rule 106   stmt_expr -> method_invocation

Terminals, with rules where they appear

AND                  : 94
BOOLEAN              : 25
BREAK                : 53
CLASS                : 4 5
COMMA                : 29 38 73
CONTINUE             : 54
DECLARE              : 
DIVIDE               : 93
DO                   : 
ELSE                 : 47
EQUALS               : 85
EQUALSCOMPARE        : 96
EXTENDS              : 4
FALSE                : 63
FLOAT                : 24
FLOATCONST           : 59
FOR                  : 49
GREATERTHAN          : 99
GREATERTHANOREQ      : 101
ID                   : 4 4 5 27 31 32 33 34 35 36 37 68 69 76 77
IF                   : 46 47
INT                  : 23
INTCONST             : 58
LBRACKET             : 
LESSTHAN             : 98
LESSTHANOREQ         : 100
LPAREN               : 32 33 34 35 36 37 46 47 48 49 67 68 69 78 79
MINUS                : 91 103
MINUSMINUS           : 88 89
NEW                  : 68 69
NOT                  : 104
NOTEQUALS            : 97
NULL                 : 61
NUMBER               : 
OR                   : 95
PERIOD               : 76
PLUS                 : 90 102
PLUSPLUS             : 86 87
PRIVATE              : 20
PUBLIC               : 19
RBRACKET             : 
RETURN               : 50 51
RPAREN               : 32 33 34 35 36 37 46 47 48 49 67 68 69 78 79
SEMICOLON            : 7 10 49 49 50 51 52 53 54 56 57
STATIC               : 21
STRING               : 
STRINGCONST          : 60
SUPER                : 66
SYMBOLS              : 
TERMINALS            : 
THIS                 : 65
TIMES                : 92
TRUE                 : 62
VOID                 : 26 33 35
WHILE                : 48
error                : 

Nonterminals, with rules where they appear

LBRACE               : 4 5 42
RBRACE               : 4 5 42
applicability        : 15 17
arguments            : 68 73 79
arith_op             : 82
assign               : 81 105
block                : 32 33 34 35 36 37 55
block_end            : 42 44
bool_op              : 83
class_body_decl      : 4 5
class_body_sub_decls : 6 7 8 9
class_decl           : 2 3
constructor_decl     : 9 11
empty                : 13 18 30 40 45 74
expr                 : 46 47 48 49 51 67 72 73 82 82 83 83 84 85
field_access         : 75 78 79
field_decl           : 7 10
formal_param         : 38 39
formals              : 34 35 37 38
lhs                  : 70 85 86 87 88 89
literal              : 64
method_decl          : 8 12
method_invocation    : 71 106
modifier             : 14 32 33 34 35 36 37
primary              : 76 80
program              : 3 0
stmt                 : 43 44 46 47 47 48 49
stmt_expr            : 49 49 52
type                 : 22 32 34 41
unary_op             : 84
var_decl             : 14 56
variable             : 28 29 41
variables            : 22 29
visibility           : 15 16

