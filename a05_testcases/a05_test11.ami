# ===Class In===
M_scan_int_1:
M_scan_float_2:
# ===Class Out===
M_print_3:
M_print_4:
M_print_5:
M_print_6:
# ===Class A===
C_1:
move_immed_i t0, 0
hstore a0, t0, a1	#Store RHS in assiggnment to Field-access(This, factor, 1)
M_nfold_7:
move_immed_i t2, 0
hload t1, a0, t2
imul t3, a1, t1
move t0, t3		# Store RHS in assignment to Variable(2)
move a0, t0	# Move method return value to a0
ret
# ===Class a05_test10===
M_main_8:
move_immed_i t4, 10
move t0, t4		# Store RHS in assignment to Variable(1)
move_immed_i t5, 3
move t1, t5		# Store RHS in assignment to Variable(2)
move_immed_i t6, 1	# Number of memory cells to be allocated on heap
halloc t7, t6
save t0
save t1
save t2
save t3
save t4
save t5
save t6
save t7
move a0, t7	# Move base address of new object to a0
move a1, t0
call C_1	# Call initializer function
restore t7
restore t6
restore t5
restore t4
restore t3
restore t2
restore t1
restore t0
move t3, t7		# Store RHS in assignment to Variable(4)
save t0
save t1
save t2
save t3
save t4
save t5
save t6
save t7
move a0, t3
move a1, t1
call M_nfold_7
move t8, a0	# Save function return value in t8
restore t7
restore t6
restore t5
restore t4
restore t3
restore t2
restore t1
restore t0
move t2, t8		# Store RHS in assignment to Variable(3)
.static_data 0